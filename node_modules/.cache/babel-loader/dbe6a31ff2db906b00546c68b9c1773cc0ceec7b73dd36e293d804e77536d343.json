{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import UserService from \"../service/UserService\";\n\n// function LoginPage() {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const userData = await UserService.login(email, password);\n//       console.log(userData);\n//       if (userData.token) {\n//         localStorage.setItem(\"token\", userData.token);\n//         localStorage.setItem(\"role\", userData.role);\n//         navigate(\"/profile\");\n//       } else {\n//         setError(userData.message);\n//       }\n//     } catch (error) {\n//       console.log(error);\n//       setError(error.message);\n//       setTimeout(() => {\n//         setError(\"\");\n//       }, 5000);\n//     }\n//   };\n\n//   return (\n//     <div className=\"auth-container\">\n//       <h2>Login</h2>\n//       {error && <p className=\"error-message\">{error}</p>}\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"form-group\">\n//           <label>Email: </label>\n//           <input\n//             type=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label>Password: </label>\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//           />\n//         </div>\n//         <button type=\"submit\">Login</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default LoginPage;","map":{"version":3,"names":[],"sources":["/home/reddirani/Desktop/UserManagement/users-management/src/components/auth/LoginPage.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import UserService from \"../service/UserService\";\n\n// function LoginPage() {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const userData = await UserService.login(email, password);\n//       console.log(userData);\n//       if (userData.token) {\n//         localStorage.setItem(\"token\", userData.token);\n//         localStorage.setItem(\"role\", userData.role);\n//         navigate(\"/profile\");\n//       } else {\n//         setError(userData.message);\n//       }\n//     } catch (error) {\n//       console.log(error);\n//       setError(error.message);\n//       setTimeout(() => {\n//         setError(\"\");\n//       }, 5000);\n//     }\n//   };\n\n//   return (\n//     <div className=\"auth-container\">\n//       <h2>Login</h2>\n//       {error && <p className=\"error-message\">{error}</p>}\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"form-group\">\n//           <label>Email: </label>\n//           <input\n//             type=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label>Password: </label>\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//           />\n//         </div>\n//         <button type=\"submit\">Login</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default LoginPage;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}