{"ast":null,"code":"import axiosInstance from \"./axiosInstance\";\nclass UserService {\n  static async login(email, password) {\n    try {\n      const response = await axiosInstance.post(\"/auth/login\", {\n        email,\n        password\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async register(userData, token) {\n    try {\n      const response = await axiosInstance.post(\"/auth/register\", userData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async getAllUsers(token) {\n    try {\n      const response = await axiosInstance.get(\"/admin/get-all-users\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async getYourProfile(token) {\n    try {\n      const response = await axios.get(`${UserService.BASE_URL}/adminuser/get-profile`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async getUserById(userId, token) {\n    try {\n      const response = await axios.get(`${UserService.BASE_URL}/admin/get-users/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static logout() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"refreshToken\");\n    localStorage.removeItem(\"role\");\n  }\n  static isAuthenticated() {\n    const token = localStorage.getItem(\"token\");\n    return !!token;\n  }\n  static isAdmin() {\n    const role = localStorage.getItem(\"role\");\n    return role === \"ADMIN\";\n  }\n  static isUser() {\n    const role = localStorage.getItem(\"role\");\n    return role === \"USER\";\n  }\n  static adminOnly() {\n    return this.isAuthenticated() && this.isAdmin();\n  }\n}\nexport default UserService;","map":{"version":3,"names":["axiosInstance","UserService","login","email","password","response","post","data","err","register","userData","token","headers","Authorization","getAllUsers","get","getYourProfile","axios","BASE_URL","getUserById","userId","logout","localStorage","removeItem","isAuthenticated","getItem","isAdmin","role","isUser","adminOnly"],"sources":["/home/reddirani/Desktop/UserManagement/users-management/src/components/service/UserService.js"],"sourcesContent":["import axiosInstance from \"./axiosInstance\";\n\nclass UserService {\n  static async login(email, password) {\n    try {\n      const response = await axiosInstance.post(\"/auth/login\", {\n        email,\n        password,\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  static async register(userData, token) {\n    try {\n      const response = await axiosInstance.post(\"/auth/register\", userData, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  static async getAllUsers(token) {\n    try {\n      const response = await axiosInstance.get(\"/admin/get-all-users\", {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  static async getYourProfile(token) {\n    try {\n      const response = await axios.get(\n        `${UserService.BASE_URL}/adminuser/get-profile`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  static async getUserById(userId, token) {\n    try {\n      const response = await axios.get(\n        `${UserService.BASE_URL}/admin/get-users/${userId}`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  static logout() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"refreshToken\");\n    localStorage.removeItem(\"role\");\n  }\n\n  static isAuthenticated() {\n    const token = localStorage.getItem(\"token\");\n    return !!token;\n  }\n\n  static isAdmin() {\n    const role = localStorage.getItem(\"role\");\n    return role === \"ADMIN\";\n  }\n\n  static isUser() {\n    const role = localStorage.getItem(\"role\");\n    return role === \"USER\";\n  }\n\n  static adminOnly() {\n    return this.isAuthenticated() && this.isAdmin();\n  }\n}\n\nexport default UserService;\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,iBAAiB;AAE3C,MAAMC,WAAW,CAAC;EAChB,aAAaC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,aAAa,CAACM,IAAI,CAAC,aAAa,EAAE;QACvDH,KAAK;QACLC;MACF,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF;EAEA,aAAaC,QAAQA,CAACC,QAAQ,EAAEC,KAAK,EAAE;IACrC,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAML,aAAa,CAACM,IAAI,CAAC,gBAAgB,EAAEI,QAAQ,EAAE;QACpEE,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUF,KAAK;QAAG;MAC9C,CAAC,CAAC;MACF,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF;EAEA,aAAaM,WAAWA,CAACH,KAAK,EAAE;IAC9B,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAML,aAAa,CAACe,GAAG,CAAC,sBAAsB,EAAE;QAC/DH,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUF,KAAK;QAAG;MAC9C,CAAC,CAAC;MACF,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF;EAEA,aAAaQ,cAAcA,CAACL,KAAK,EAAE;IACjC,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMY,KAAK,CAACF,GAAG,CAC9B,GAAGd,WAAW,CAACiB,QAAQ,wBAAwB,EAC/C;QACEN,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUF,KAAK;QAAG;MAC9C,CACF,CAAC;MACD,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF;EAEA,aAAaW,WAAWA,CAACC,MAAM,EAAET,KAAK,EAAE;IACtC,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMY,KAAK,CAACF,GAAG,CAC9B,GAAGd,WAAW,CAACiB,QAAQ,oBAAoBE,MAAM,EAAE,EACnD;QACER,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUF,KAAK;QAAG;MAC9C,CACF,CAAC;MACD,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF;EAEA,OAAOa,MAAMA,CAAA,EAAG;IACdC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChCD,YAAY,CAACC,UAAU,CAAC,cAAc,CAAC;IACvCD,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;EACjC;EAEA,OAAOC,eAAeA,CAAA,EAAG;IACvB,MAAMb,KAAK,GAAGW,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;IAC3C,OAAO,CAAC,CAACd,KAAK;EAChB;EAEA,OAAOe,OAAOA,CAAA,EAAG;IACf,MAAMC,IAAI,GAAGL,YAAY,CAACG,OAAO,CAAC,MAAM,CAAC;IACzC,OAAOE,IAAI,KAAK,OAAO;EACzB;EAEA,OAAOC,MAAMA,CAAA,EAAG;IACd,MAAMD,IAAI,GAAGL,YAAY,CAACG,OAAO,CAAC,MAAM,CAAC;IACzC,OAAOE,IAAI,KAAK,MAAM;EACxB;EAEA,OAAOE,SAASA,CAAA,EAAG;IACjB,OAAO,IAAI,CAACL,eAAe,CAAC,CAAC,IAAI,IAAI,CAACE,OAAO,CAAC,CAAC;EACjD;AACF;AAEA,eAAezB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}